(undo-tree-save-format-version . 1)
"0e1dbb8b0b24b5027de1e75b9daafb05ed204aba"
[nil nil nil nil (26286 10523 484731 620000) 0 nil]
([nil nil (3849) nil (26286 10523 484731 187000) 0 nil])
([nil nil ((3858 . 3859) (3857 . 3858) (3855 . 3857) (3854 . 3855) (3851 . 3852) (t 26286 7112 641917 429000)) nil (26286 10523 484730 890000) 0 nil])
([nil nil ((3866 . 3868) (#("d" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -3866) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (#("2" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -3867) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 3868 (3866 . 3868)) nil (26286 10523 484730 58000) 0 nil])
([nil nil ((4020 . 4021) 3868) nil (26286 10523 484709 519000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3871 . 3872) (#("
" 0 1 (fontified nil)) . -3890) (3869 . 3891) 3867 (t 26286 10523 486463 635000)) nil (26286 10542 720315 652000) 0 nil])
([nil nil ((3872 . 3875) (#("(!n, !m)" 0 1 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t) 1 2 (face haskell-operator-face syntax-table (1) fontified t) 2 3 (face tree-sitter-hl-face:variable fontified t) 3 4 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 4 5 (fontified t) 5 6 (face haskell-operator-face syntax-table (1) fontified t) 6 7 (face tree-sitter-hl-face:variable fontified t) 7 8 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t)) . 3872) (undo-tree-id54 . -7) (undo-tree-id55 . -8) (undo-tree-id56 . -8)) nil (26286 10542 720315 30000) 0 nil])
([nil nil ((3909 . 3910) (3899 . 3909) (3881 . 3899) (#("e" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -3881) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (#("r" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -3882) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#("p" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -3883) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#("l" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -3884) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) 3885 (3879 . 3885) (#("i" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -3879) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) 3880 (3879 . 3880) (#("ints2'" 0 6 (face tree-sitter-hl-face:variable fontified t)) . 3879) (undo-tree-id49 . -5) (undo-tree-id50 . -6) (undo-tree-id51 . -6) (undo-tree-id52 . -6) (undo-tree-id53 . -6)) nil (26286 10542 720311 884000) 0 nil])
([nil nil ((3899 . 3904) (3896 . 3899) (3895 . 3896) (t 26286 10542 721743 115000)) nil (26286 10554 131392 511000) 0 nil])
([nil nil ((3923 . 3932) (#("xs <- intsU'" 0 2 (face tree-sitter-hl-face:variable fontified t) 2 3 (fontified t) 3 5 (face tree-sitter-hl-face:operator syntax-table (1) fontified t) 5 6 (fontified t) 6 12 (face tree-sitter-hl-face:variable fontified t)) . 3923) (undo-tree-id57 . -11) (undo-tree-id58 . -11) (undo-tree-id59 . -11) (undo-tree-id60 . -11) (undo-tree-id61 . -11) (undo-tree-id62 . -12) (undo-tree-id63 . -12) (undo-tree-id64 . -12) (undo-tree-id65 . -12) (t 26286 10554 132908 945000)) nil (26286 10608 878760 907000) 0 nil])
([nil nil ((3935 . 3951) (3932 . 3935) 3931 (t 26286 10608 879704 831000)) nil (26286 10614 751930 663000) 0 nil])
([nil nil ((3943 . 3954) (#("erplicaz" 0 8 (face tree-sitter-hl-face:variable fontified t)) . 3943) (undo-tree-id66 . -7) (undo-tree-id67 . -1) (undo-tree-id68 . -2) (undo-tree-id69 . -1) (undo-tree-id70 . -3) (undo-tree-id71 . -2) (undo-tree-id72 . -4) (undo-tree-id73 . -3) (undo-tree-id74 . -5) (undo-tree-id75 . -4) (undo-tree-id76 . -6) (undo-tree-id77 . -5) (undo-tree-id78 . -7) (undo-tree-id79 . -6) (undo-tree-id80 . -8) (undo-tree-id81 . -7) (undo-tree-id82 . -7) (undo-tree-id83 . -8) (undo-tree-id84 . -7) (undo-tree-id85 . -8) (undo-tree-id86 . -8)) nil (26286 10614 751928 590000) 0 nil])
([nil nil ((3954 . 3962) (t 26286 10614 752790 239000)) nil (26286 10629 238919 986000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3953) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1)) nil (26286 10629 238919 361000) 0 nil])
([nil nil ((3894 . 3899) (#("((,,) <$> int' <*> int1')" 0 1 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t) 1 2 (face (rainbow-delimiters-depth-2-face tree-sitter-hl-face:punctuation.bracket) fontified t) 2 3 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 3 4 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 4 5 (face (rainbow-delimiters-depth-2-face tree-sitter-hl-face:punctuation.bracket) fontified t) 5 6 (fontified t) 6 7 (face tree-sitter-hl-face:operator syntax-table (1) fontified t) 7 8 (face tree-sitter-hl-face:operator syntax-table (1) fontified t) 8 9 (face tree-sitter-hl-face:operator syntax-table (1) fontified t) 9 10 (fontified t) 10 14 (face (tree-sitter-hl-face:property tree-sitter-hl-face:variable) fontified t) 14 15 (fontified t) 15 16 (face tree-sitter-hl-face:operator syntax-table (1) fontified t) 16 17 (face tree-sitter-hl-face:operator syntax-table (1) fontified t) 17 18 (face tree-sitter-hl-face:operator syntax-table (1) fontified t) 18 19 (fontified t) 19 24 (face (tree-sitter-hl-face:property tree-sitter-hl-face:variable) fontified t) 24 25 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t)) . 3894) (undo-tree-id87 . -24) (undo-tree-id88 . -25) (undo-tree-id89 . -25) (undo-tree-id90 . -25) (undo-tree-id91 . -25)) nil (26286 10629 238913 969000) 0 nil])
([nil nil ((3897 . 3898) (t 26286 10629 241004 495000)) nil (26286 10632 345608 337000) 0 nil])
([nil nil ((3940 . 3941)) nil (26286 10632 345606 55000) 0 nil])
([nil nil ((3947 . 3955) (3944 . 3947) (#("  " 0 2 (fontified t)) . 3944) (undo-tree-id100 . -2) (undo-tree-id101 . -2) (undo-tree-id102 . -2) (undo-tree-id103 . -2) (undo-tree-id104 . -2) (undo-tree-id105 . -2) (undo-tree-id106 . -2) (undo-tree-id107 . -2) (undo-tree-id108 . -2) (undo-tree-id109 . -2) 3946 (3943 . 3946) 3914 (t 26286 10632 346051 718000)) nil (26286 10636 424723 818000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3992) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) 3993 (3989 . 3993) (#("n" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -3989) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (#(" " 0 1 (fontified t)) . -3990) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) 3991 (3970 . 3991) (3965 . 3970) (3955 . 3965) (t 26286 10636 426113 754000)) nil (26286 10650 600433 922000) 0 nil])
([nil nil ((3941 . 3943) (#("2" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 3941) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (t 26286 10650 602329 169000)) nil (26286 10655 296814 65000) 0 nil])
([nil nil ((3898 . 3900) (#("2" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 3898) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (t 26286 10655 297400 469000)) nil (26286 10657 436299 263000) 0 nil])
([nil nil ((4027 . 4029) (4026 . 4027) (4023 . 4026) (4018 . 4023) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t)) . -4018) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) 4019 (4015 . 4019) (#("s" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -4015) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (#("p" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -4016) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) 4017 (4014 . 4017) (#("q" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -4014) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (#("s" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -4015) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (#(" " 0 1 (fontified t)) . -4016) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (#("$" 0 1 (face tree-sitter-hl-face:operator syntax-table (1) fontified t)) . -4017) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (#(" " 0 1 (fontified t)) . -4018) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (#("\\" 0 1 (face tree-sitter-hl-face:operator syntax-table (1) fontified t)) . -4019) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) 4020 (4019 . 4020) (#(" " 0 1 (fontified t)) . -4019) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (#("c" 0 1 (face (tree-sitter-hl-face:property tree-sitter-hl-face:variable) fontified t)) . -4020) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) 4021 (4006 . 4021) (4001 . 4006) (3994 . 4001) (t 26286 10657 437432 961000)) nil (26286 10684 217648 978000) 0 nil])
([nil nil (3949) nil (26286 10752 241017 402000) 0 nil])
([nil nil ((3949 . 3951) (t 26286 10684 217839 192000)) nil (26286 10752 241017 137000) 0 nil])
([nil nil ((3963 . 3964) (3956 . 3963) (3955 . 3956)) nil (26286 10752 241016 895000) 0 nil])
([nil nil ((4017 . 4018) (4006 . 4017) (4004 . 4006) (3995 . 4004) (#("e" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -3995) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (#("r" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -3996) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (#("a" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -3997) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (#("p" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -3998) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (#("l" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -3999) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) 4000 (3983 . 4000) (3978 . 3983) 3963) nil (26286 10752 241015 236000) 0 nil])
([nil nil ((#("z" 0 1 (haskell-type t font-lock-multiline t face tree-sitter-hl-face:type.argument fontified t)) . 4013) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1)) nil (26286 10752 240750 608000) 0 nil])
([nil nil ((4013 . 4014) (#("i" 0 1 (haskell-type t font-lock-multiline t face tree-sitter-hl-face:type.argument fontified t)) . 4013) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1)) nil (26286 10752 240748 889000) 0 nil])
([nil nil ((4129 . 4136) (#(" " 0 1 (fontified t)) . -4129) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) 4130 (4127 . 4130) (#("z" 0 1 (face (tree-sitter-hl-face:function.call tree-sitter-hl-face:variable) fontified t)) . -4127) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) 4128 (4115 . 4128) (4094 . 4115) (#("n" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -4094) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) 4095 (4094 . 4095) (4091 . 4094) (#(" " 0 1 (fontified t)) . -4091) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (#(">" 0 1 (face haskell-operator-face syntax-table (1) fontified t)) . -4092) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (#("U" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -4093) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) 4094 (4088 . 4094) (4086 . 4088) (4081 . 4086) (#("                   " 0 2 (fontified t) 2 3 (indent-bars-display #("│" 0 1 (face indent-bars-1)) fontified t) 3 19 (fontified t)) . -4081) (undo-tree-id302 . -19) (undo-tree-id303 . -19) (undo-tree-id304 . -19) 4100 (4080 . 4100) (#("                   " 0 2 (fontified t) 2 3 (indent-bars-display #("│" 0 1 (face indent-bars-1)) fontified t) 3 19 (fontified t)) . 4080) (undo-tree-id305 . -19) (undo-tree-id306 . -19) (undo-tree-id307 . -19) 4099 (4079 . 4099) 4078) nil (26286 10752 240742 589000) 0 nil])
([nil nil ((3956 . 3960) (#(" " 0 1 (fontified t)) . -3956) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) 3957 (3949 . 3957) (3946 . 3949) (#("  " 0 2 (fontified t)) . 3946) (undo-tree-id373 . -2) (undo-tree-id374 . -2) (undo-tree-id375 . -2) (undo-tree-id376 . -2) (undo-tree-id377 . -2) (undo-tree-id378 . -2) (undo-tree-id379 . -2) (undo-tree-id380 . -2) (undo-tree-id381 . -2) (undo-tree-id382 . -2) 3948 (3945 . 3948) 3915 (t 26286 10752 242868 176000)) nil (26286 10762 108591 148000) 0 nil])
([nil nil ((3969 . 3977) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t)) . -3969) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (#("V" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -3970) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (#("A" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -3971) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (#("I" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -3972) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (#("." 0 1 (face tree-sitter-hl-face:operator fontified t)) . -3973) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (#("s" 0 1 (face (tree-sitter-hl-face:function.call tree-sitter-hl-face:variable) fontified t)) . -3974) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (#("o" 0 1 (face (tree-sitter-hl-face:function.call tree-sitter-hl-face:variable) fontified t)) . -3975) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (#("r" 0 1 (face (tree-sitter-hl-face:function.call tree-sitter-hl-face:variable) fontified t)) . -3976) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) 3977 (3960 . 3977) (t 26286 10762 111017 125000)) nil (26286 10785 369044 581000) 0 nil])
([nil nil ((3954 . 3958) (#("qs'" 0 3 (face tree-sitter-hl-face:variable fontified t)) . 3954) (undo-tree-id519 . -2) (undo-tree-id520 . -3) (undo-tree-id521 . -3) (t 26286 10785 370367 900000)) nil (26286 10790 97621 920000) 0 nil])
([nil nil ((4100 . 4101) (t 26286 10790 98439 155000)) nil (26286 10791 921739 654000) 0 nil])
([nil nil ((4089 . 4090) (#("U" 0 1 (face tree-sitter-hl-face:type.builtin fontified t)) . 4089) (undo-tree-id522 . -1) (t 26286 10791 922466 639000)) nil (26286 10807 625347 968000) 0 nil])
([nil nil ((3996 . 3999) (3994 . 3996) (3979 . 3994) (3978 . 3979) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t)) . -3978) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) 3979 (3977 . 3979) (3976 . 3977) (3975 . 3976) (3961 . 3975) (t 26286 10807 626703 167000)) nil (26286 10835 859604 100000) 0 nil])
([nil nil ((4016 . 4020) (t 26286 10835 862127 983000)) nil (26286 10839 840715 331000) 0 nil])
([nil nil ((4008 . 4009) (t 26286 10839 842187 822000)) nil (26286 10860 755626 97000) 0 nil])
([nil nil ((4034 . 4036) (4017 . 4034)) nil (26286 10860 755623 937000) 0 nil])
([nil nil ((4042 . 4054) (#(" " 0 1 (fontified t)) . -4042) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) 4043 (4040 . 4043) (t 26286 10860 756502 80000)) nil (26286 10864 967329 388000) 0 nil])
([nil nil ((#(".generate" 0 1 (fontified t) 1 9 (face tree-sitter-hl-face:variable fontified t)) . 4045) (undo-tree-id597 . -8) (undo-tree-id598 . -9) (undo-tree-id599 . -8) (undo-tree-id600 . -8) (undo-tree-id601 . -9) (undo-tree-id602 . -8) (undo-tree-id603 . -8) (undo-tree-id604 . -8) (undo-tree-id605 . -8) (undo-tree-id606 . -8) (undo-tree-id607 . -8) (undo-tree-id608 . -8) (undo-tree-id609 . -8) (undo-tree-id610 . -8) (undo-tree-id611 . -8) (undo-tree-id612 . -8) (undo-tree-id613 . -8) (undo-tree-id614 . -1) (undo-tree-id615 . -8) (undo-tree-id616 . -8) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -9) (undo-tree-id623 . -9) (t 26286 10864 968565 336000)) nil (26286 10877 957067 198000) 0 nil])
([nil nil ((#(" ++ U" 0 1 (fontified t) 1 2 (syntax-table (1) face tree-sitter-hl-face:operator fontified t) 2 3 (syntax-table (1) face tree-sitter-hl-face:operator fontified t) 3 4 (fontified t) 4 5 (face tree-sitter-hl-face:type.builtin fontified t)) . 4040) (undo-tree-id549 . -4) (undo-tree-id550 . -2) (undo-tree-id551 . -5) (undo-tree-id552 . -5) (undo-tree-id553 . -5) (undo-tree-id554 . -5) (undo-tree-id555 . -5) (undo-tree-id556 . -5) (undo-tree-id557 . -5) (undo-tree-id558 . -5) (undo-tree-id559 . -5) (undo-tree-id560 . -5) (undo-tree-id561 . -5) (undo-tree-id562 . -5) (undo-tree-id563 . -5) (undo-tree-id564 . -5) (undo-tree-id565 . -5) (undo-tree-id566 . -5) (undo-tree-id567 . -5) (undo-tree-id568 . -5) (undo-tree-id569 . -5) (undo-tree-id570 . -5) (undo-tree-id571 . -5) (undo-tree-id572 . -5) (undo-tree-id573 . -5) (undo-tree-id574 . -5) (undo-tree-id575 . -5) (undo-tree-id576 . -5) (undo-tree-id577 . -4) (undo-tree-id578 . -5) (undo-tree-id579 . -4) (undo-tree-id580 . -4) (undo-tree-id581 . -4) (undo-tree-id582 . -4) (undo-tree-id583 . -4) (undo-tree-id584 . -4) (undo-tree-id585 . -4) (undo-tree-id586 . -4) (undo-tree-id587 . -4) (undo-tree-id588 . -3) (undo-tree-id589 . -4) (undo-tree-id590 . -2) (undo-tree-id591 . -3) (undo-tree-id592 . -1) (undo-tree-id593 . -2) (undo-tree-id594 . -1) (undo-tree-id595 . -5) (undo-tree-id596 . -5)) nil (26286 10877 957057 659000) 0 nil])
([nil nil ((3975 . 3977) (#(" " 0 1 (fontified t)) . -3975) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) 3976 (3972 . 3976) (3961 . 3972) (t 26286 10877 958760 347000)) nil (26286 10887 981537 275000) 0 nil])
([nil nil ((#("  let !tps' = V.map reverse . V.accumulate (:) (V.replicate n []) $ U.modify (VAI.sortBy (comparing fst)) tps
" 0 2 (fontified t) 2 5 (face tree-sitter-hl-face:keyword fontified t) 5 6 (fontified t) 6 7 (face haskell-operator-face syntax-table (1) fontified t) 7 11 (face tree-sitter-hl-face:variable fontified t) 11 12 (fontified t) 12 13 (face tree-sitter-hl-face:operator syntax-table (1) fontified t) 13 14 (fontified t) 14 15 (face tree-sitter-hl-face:type.builtin fontified t) 15 16 (fontified t) 16 19 (face (tree-sitter-hl-face:function.call tree-sitter-hl-face:variable) fontified t) 19 20 (fontified t) 20 27 (face tree-sitter-hl-face:variable fontified t) 27 28 (fontified t) 28 29 (face tree-sitter-hl-face:operator syntax-table (1) fontified t) 29 30 (fontified t) 30 31 (face tree-sitter-hl-face:type.builtin fontified t) 31 32 (fontified t) 32 42 (face (tree-sitter-hl-face:function.call tree-sitter-hl-face:variable) fontified t) 42 43 (fontified t) 43 44 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t) 44 45 (face tree-sitter-hl-face:operator syntax-table (1) fontified t) 45 46 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t) 46 47 (fontified t) 47 48 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t) 48 49 (face tree-sitter-hl-face:type.builtin fontified t) 49 50 (fontified t) 50 59 (face (tree-sitter-hl-face:function.call tree-sitter-hl-face:variable) fontified t) 59 60 (fontified t) 60 61 (face tree-sitter-hl-face:variable fontified t) 61 62 (fontified t) 62 63 (face (rainbow-delimiters-depth-2-face tree-sitter-hl-face:punctuation.bracket) fontified t) 63 64 (face (rainbow-delimiters-depth-2-face tree-sitter-hl-face:punctuation.bracket) fontified t) 64 65 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t) 65 66 (fontified t) 66 67 (face tree-sitter-hl-face:operator syntax-table (1) fontified t) 67 68 (fontified t) 68 69 (face tree-sitter-hl-face:type.builtin fontified t) 69 70 (fontified t) 70 76 (face (tree-sitter-hl-face:function.call tree-sitter-hl-face:variable) fontified t) 76 77 (fontified t) 77 78 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t) 78 81 (face tree-sitter-hl-face:type.builtin fontified t) 81 82 (fontified t) 82 88 (face (tree-sitter-hl-face:function.call tree-sitter-hl-face:variable) fontified t) 88 89 (fontified t) 89 90 (face (rainbow-delimiters-depth-2-face tree-sitter-hl-face:punctuation.bracket) fontified t) 90 99 (face (tree-sitter-hl-face:function.call tree-sitter-hl-face:variable) fontified t) 99 100 (fontified t) 100 103 (face tree-sitter-hl-face:variable fontified t) 103 104 (face (rainbow-delimiters-depth-2-face tree-sitter-hl-face:punctuation.bracket) fontified t) 104 105 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t) 105 106 (fontified t) 106 109 (face tree-sitter-hl-face:variable fontified t) 109 110 (fontified t)) . 3947) (undo-tree-id627 . 80) (undo-tree-id628 . -109) (undo-tree-id629 . -110) (undo-tree-id630 . -110) (undo-tree-id631 . -109) (undo-tree-id632 . -109) (undo-tree-id633 . -108) (undo-tree-id634 . -108) (undo-tree-id635 . -108) (undo-tree-id636 . -29) (undo-tree-id637 . -28) (undo-tree-id638 . -30) (undo-tree-id639 . -29) (undo-tree-id640 . -110) (undo-tree-id641 . -29) (undo-tree-id642 . -30) (undo-tree-id643 . -29) (undo-tree-id644 . -29) (undo-tree-id645 . -29) (undo-tree-id646 . -29) (undo-tree-id647 . -29) (undo-tree-id648 . -29) (undo-tree-id649 . -29) (undo-tree-id650 . -29) (undo-tree-id651 . -110) 3976 (t 26286 10887 982910 757000)) nil (26286 10890 156939 140000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4054 . 4055) (#("
" 0 1 (fontified nil)) . -4162) (4052 . 4163) 4019) nil (26286 10890 156926 279000) 0 nil])
([nil nil ((4055 . 4057)) nil (26286 10890 156924 158000) 0 nil])
([nil nil ((4053 . 4054) 4056 (t 26286 10890 157943 385000)) nil (26286 10890 997412 583000) 0 nil])
([nil nil ((4172 . 4173) (t 26286 10890 998956 0)) nil (26286 10896 886152 156000) 0 nil])
([nil nil ((4187 . 4195) (t 26286 10896 888044 325000)) nil (26286 10900 955932 542000) 0 nil])
([nil nil ((4202 . 4203) (4199 . 4202) (4198 . 4199) (4197 . 4198) (#("tIn, !" 0 3 (face tree-sitter-hl-face:variable fontified t) 3 4 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 4 5 (fontified t) 5 6 (face haskell-operator-face syntax-table (1) fontified t)) . 4197) (undo-tree-id652 . -5) (undo-tree-id653 . -6) (undo-tree-id654 . -6) (undo-tree-id655 . -6) (undo-tree-id656 . -6) (t 26286 10900 957105 341000)) nil (26286 10906 199685 180000) 0 nil])
([nil nil ((4066 . 4074) (#("'" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 4066) (undo-tree-id662 . 1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (t 26286 10906 201183 960000)) nil (26286 10924 30405 531000) 0 nil])
([nil nil ((4189 . 4197) (#("'" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 4189) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1)) nil (26286 10924 30402 681000) 0 nil])
([nil nil ((4226 . 4236) (#("U" 0 1 (face tree-sitter-hl-face:constructor fontified t)) . -4226) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (#("." 0 1 (face tree-sitter-hl-face:operator fontified t)) . -4227) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) 4228 (4226 . 4228) (4219 . 4226) (4209 . 4219) (#("(!t, !p)" 0 1 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t) 1 2 (face haskell-operator-face syntax-table (1) fontified t) 2 3 (face tree-sitter-hl-face:variable fontified t) 3 4 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 4 5 (fontified t) 5 6 (face haskell-operator-face syntax-table (1) fontified t) 6 7 (face tree-sitter-hl-face:variable fontified t) 7 8 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t)) . 4209) (undo-tree-id676 . -7) (undo-tree-id677 . -8) (undo-tree-id678 . -8) (t 26286 10924 32451 167000)) nil (26286 10940 20256 334000) 0 nil])
([nil nil ((4090 . 4097) (#(" " 0 1 (fontified t)) . -4090) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) 4091 (4083 . 4091) (t 26286 10934 772612 23000)) nil (26286 10944 711657 817000) 0 nil] [nil nil ((4083 . 4084) (t 26286 10934 772612 23000)) ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t)) . 4083) (undo-tree-id679 . -1)) (26286 10940 19455 238000) 0 nil])
([nil nil ((4104 . 4105)) nil (26286 10944 711648 244000) 0 nil])
nil
([nil nil ((4157 . 4159) (#("." 0 1 (face haskell-operator-face syntax-table (1) fontified t)) . -4157) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) 4158 (4146 . 4158) (t 26286 10944 712760 840000)) nil (26286 10971 487496 437000) 0 nil])
([nil nil ((3898 . 3899) (#("0" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 3898) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (t 26286 10958 668969 690000)) nil (26286 10974 58414 315000) 0 nil] [nil nil ((3898 . 3899) (3896 . 3898) (3895 . 3896) (#("
" 0 1 (fontified t)) . -3895) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) 3896 (#("    t" 0 2 (fontified t) 2 3 (indent-bars-display #("│" 0 1 (face indent-bars-1)) fontified t) 3 4 (fontified t) 4 5 (face (tree-sitter-hl-face:property tree-sitter-hl-face:variable) fontified t)) . -3896) (undo-tree-id694 . -5) (undo-tree-id695 . -4) (undo-tree-id696 . -5) (undo-tree-id697 . -4) (undo-tree-id698 . -5) 3901 (3900 . 3901) (3895 . 3900) (3894 . 3895) (#("ints01'" 0 7 (face tree-sitter-hl-face:variable fontified t)) . 3894) (undo-tree-id699 . -6) (undo-tree-id700 . -5) (undo-tree-id701 . -5) (undo-tree-id702 . -5) (undo-tree-id703 . -5) (undo-tree-id704 . -5) (undo-tree-id705 . -5) (undo-tree-id706 . -5) (undo-tree-id707 . -5) (undo-tree-id708 . -5) (undo-tree-id709 . -5) (undo-tree-id710 . -5) (undo-tree-id711 . -6) (undo-tree-id712 . -6) (undo-tree-id713 . -7) (undo-tree-id714 . -7) (undo-tree-id715 . -7) (undo-tree-id716 . -7) (t 26286 10958 668969 690000)) ((3894 . 3901) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified nil)) . 3894) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (#("
    " 0 1 (fontified nil) 1 3 (fontified nil) 3 4 (indent-bars-display #("│" 0 1 (face indent-bars-1)) fontified nil) 4 5 (fontified nil)) . 3895) (undo-tree-id727 . -5) (undo-tree-id728 . -5) (undo-tree-id729 . -5) (undo-tree-id730 . -5) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (#("t" 0 1 (face (tree-sitter-hl-face:property tree-sitter-hl-face:variable) fontified nil)) . 3900) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (3895 . 3901) (#("(" 0 1 (face (rainbow-delimiters-depth-2-face tree-sitter-hl-face:punctuation.bracket) fontified nil)) . 3895) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (#(",)" 0 1 (face tree-sitter-hl-face:punctuation.delimiter fontified nil) 1 2 (face (rainbow-delimiters-depth-2-face tree-sitter-hl-face:punctuation.bracket) fontified nil)) . 3896) (undo-tree-id740 . -2) (undo-tree-id741 . -2) (undo-tree-id742 . -2) (undo-tree-id743 . -2) (undo-tree-id744 . -2) (#(" " 0 1 (fontified t)) . 3898) (undo-tree-id745 . -1)) (26286 10971 483425 587000) 0 nil])
([nil current ((#("
" 0 1 (fontified t)) . 3946) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (t 26286 10974 59199 873000)) nil (26286 10975 84264 380000) 0 nil])
nil
nil
