(undo-tree-save-format-version . 1)
"7f4318d09f0f7e9009953696cf03ab418a281de8"
[nil nil nil nil (26286 7676 938993 59000) 0 nil]
([nil nil ((#("x" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 3865) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (t 26286 7112 633917 308000)) nil (26286 7676 938992 477000) 0 nil])
([nil nil ((3870 . 3874) (#("intsU" 0 5 (face tree-sitter-hl-face:variable fontified t)) . 3870) (undo-tree-id0 . -4) (undo-tree-id1 . -5) (undo-tree-id2 . -5)) nil (26286 7676 938990 418000) 0 nil])
([nil nil ((4010 . 4011) 3874) nil (26286 7676 938957 762000) 0 nil])
([nil nil ((3902 . 3908) (3900 . 3902) (3879 . 3900) (#("e" 0 1 (face tree-sitter-hl-face:variable fontified t)) . -3879) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) 3880 (3879 . 3880) (3876 . 3879) (#("  " 0 2 (fontified t)) . 3876) (undo-tree-id16 . -2) (undo-tree-id17 . -2) (undo-tree-id18 . -2) (undo-tree-id19 . -2) (undo-tree-id20 . -2) (undo-tree-id21 . -2) (undo-tree-id22 . -2) (undo-tree-id23 . -2) (undo-tree-id24 . -2) 3878 (3875 . 3878) 3873 (t 26286 7676 939452 911000)) nil (26286 7691 45762 925000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3892) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 3893 (3890 . 3893) (#("U" 0 1 (face tree-sitter-hl-face:type.builtin fontified t)) . 3890) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1)) nil (26286 7691 45755 988000) 0 nil])
([nil nil ((3969 . 3970) (3959 . 3969) (3958 . 3959) (3949 . 3958) (3948 . 3949) (3947 . 3948) (3934 . 3947) (3923 . 3934) (3916 . 3923) (3912 . 3916) (3909 . 3912) 3891 (t 26286 7691 46666 142000)) nil (26286 7713 808393 546000) 0 nil])
([nil nil ((#("i" 0 1 (face tree-sitter-hl-face:type.argument fontified t)) . 3966) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1)) nil (26286 7713 808392 315000) 0 nil])
([nil nil ((3965 . 3966) (#("=" 0 1 (face tree-sitter-hl-face:operator syntax-table (1) fontified t)) . 3965) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1)) nil (26286 7713 808390 591000) 0 nil])
([nil nil ((3897 . 3898) (3895 . 3897) (3893 . 3895) (3892 . 3893) (3888 . 3892) (3887 . 3888) (3885 . 3887) (#("9" 0 1 (face tree-sitter-hl-face:number syntax-table (2) fontified t)) . -3885) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) 3886 (3883 . 3886) (#("!res" 0 1 (face haskell-operator-face syntax-table (1) fontified t) 1 4 (face tree-sitter-hl-face:variable fontified t)) . 3883) (undo-tree-id33 . -3) (undo-tree-id34 . -4) (undo-tree-id35 . -4)) nil (26286 7713 808386 169000) 0 nil])
([nil nil ((4014 . 4015) (3993 . 4014) (#("\"TODO\"" 0 1 (face tree-sitter-hl-face:string fontified t) 1 5 (face (warning bold tree-sitter-hl-face:string) fontified t) 5 6 (face tree-sitter-hl-face:string fontified t)) . 3993) (undo-tree-id25 . -5) (undo-tree-id26 . -6) (undo-tree-id27 . -6) (undo-tree-id28 . -6) (undo-tree-id29 . -6)) nil (26286 7713 808381 201000) 0 nil])
([nil nil ((4028 . 4029) (4026 . 4028) (4024 . 4026) (4023 . 4024) (4019 . 4023) (4018 . 4019) (4012 . 4018) (#("=" 0 1 (face tree-sitter-hl-face:operator syntax-table (1) fontified t)) . -4012) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (#(" " 0 1 (fontified t)) . -4013) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t)) . -4014) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#("n" 0 1 (face (tree-sitter-hl-face:function.call tree-sitter-hl-face:variable) fontified t)) . -4015) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) 4016 (4011 . 4016) (4010 . 4011) (4006 . 4010) (4005 . 4006) (4001 . 4005) (4000 . 4001) (3996 . 4000) (3991 . 3996) (3980 . 3991) 3935 (t 26286 7713 811010 239000)) nil (26286 7727 28907 162000) 0 nil])
([nil nil ((4042 . 4047) (4040 . 4042) (4029 . 4040) 4028 (t 26286 7727 29210 47000)) nil (26286 7738 888310 258000) 0 nil])
([nil nil ((4078 . 4079) (4074 . 4078) (4073 . 4074) (4071 . 4073) (4069 . 4071) (4068 . 4069) (4058 . 4068) (#(" " 0 1 (indent-bars-display #("â”‚" 0 1 (face indent-bars-5)) face tree-sitter-hl-face:variable.parameter fontified t)) . -4058) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (#(" " 0 1 (face tree-sitter-hl-face:variable.parameter fontified t)) . -4059) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (#(" " 0 1 (face tree-sitter-hl-face:variable.parameter fontified t)) . -4060) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (#(" " 0 1 (face tree-sitter-hl-face:variable.parameter fontified t)) . -4061) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) 4062 (4047 . 4062) 4046 (t 26286 7729 451246 659000)) nil (26286 7748 656386 464000) 0 nil] [nil nil ((4017 . 4021) (#("p" 0 1 (face (tree-sitter-hl-face:function.call tree-sitter-hl-face:variable) fontified t)) . -4017) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) 4018 (4016 . 4018) (4014 . 4016) (t 26286 7729 451246 659000)) ((#("= " 0 1 (face tree-sitter-hl-face:operator syntax-table (1) fontified nil) 1 2 (fontified nil)) . 4014) (undo-tree-id90 . -2) (undo-tree-id91 . -2) (undo-tree-id92 . -2) (undo-tree-id93 . -2) (undo-tree-id94 . -2) (undo-tree-id95 . -2) (#("sp" 0 1 (face (tree-sitter-hl-face:function.call tree-sitter-hl-face:variable) fontified nil) 1 2 (face (tree-sitter-hl-face:function.call tree-sitter-hl-face:variable) fontified nil)) . 4016) (undo-tree-id96 . -1) (undo-tree-id97 . -2) (undo-tree-id98 . -2) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (4017 . 4018) (#("tep'" 0 4 (face (tree-sitter-hl-face:function.call tree-sitter-hl-face:variable) fontified t)) . 4017) (undo-tree-id102 . -3) (undo-tree-id103 . -3) (undo-tree-id104 . -3) (undo-tree-id105 . -4) (undo-tree-id106 . -3)) (26286 7738 886303 925000) 0 nil])
([nil nil ((4079 . 4081) (t 26286 7748 656536 981000)) nil (26286 7752 359995 89000) 0 nil])
nil
([nil nil ((4071 . 4072) (#("," 0 1 (face tree-sitter-hl-face:punctuation.delimiter fontified t)) . -4071) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) 4072 (4071 . 4072) (4067 . 4071) (4066 . 4067) (4062 . 4066) (4047 . 4062) 4046 (t 26286 7752 360592 976000)) nil (26286 7763 577323 821000) 0 nil])
([nil nil ((4080 . 4082) (4079 . 4080) (4076 . 4079) (#("3" 0 1 (face (tree-sitter-hl-face:number tree-sitter-hl-face:variable.parameter) syntax-table (2) fontified t)) . -4076) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (#("'" 0 1 (fontified t)) . -4077) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) 4078 (4074 . 4078) (4073 . 4074) (4066 . 4067)) nil (26286 7763 577319 845000) 0 nil])
([nil nil ((3991 . 3999) (3980 . 3991) 3968 (t 26286 7763 578762 565000)) nil (26286 7770 850497 587000) 0 nil])
([nil nil ((3996 . 3998) (t 26286 7770 851872 517000)) nil (26286 7777 763540 839000) 0 nil])
([nil nil ((4007 . 4010) (4003 . 4007) (4000 . 4002)) nil (26286 7777 763537 707000) 0 nil])
([nil nil ((4157 . 4158) (4154 . 4157) (4153 . 4154) (4150 . 4153) (4149 . 4150) (4135 . 4149) (4125 . 4135) (4110 . 4125) (#(" =" 0 1 (fontified t) 1 2 (face tree-sitter-hl-face:operator syntax-table (1) fontified t)) . 4110) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -2) (undo-tree-id166 . -2) (undo-tree-id167 . -2) (undo-tree-id168 . -2) (t 26286 7777 764977 29000)) nil (26286 7797 331380 652000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4174 . 4175) (#("
" 0 1 (fontified nil)) . -4206) (4158 . 4207) 4157) nil (26286 7797 331378 9000) 0 nil])
([nil nil ((nil fontified nil 4183 . 4184) (4183 . 4184) (#("R" 0 1 (face (0 nil nil nil nil nil 0 nil nil nil nil) fontified t)) . 4183) (undo-tree-id161 . -1)) nil (26286 7797 331377 568000) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -4254) (4206 . 4255) 4183) nil (26286 7797 331376 479000) 0 nil])
([nil nil ((nil fontified nil 4231 . 4232) (4231 . 4232) (#("P" 0 1 (face (0 nil nil nil nil nil 0 nil nil nil nil) fontified t)) . 4231) (undo-tree-id160 . -1)) nil (26286 7797 331374 256000) 0 nil])
([nil nil ((#("n1, " 0 2 (face tree-sitter-hl-face:variable fontified t) 2 3 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 3 4 (fontified t)) . 4195) (undo-tree-id184 . -3) (undo-tree-id185 . -4) (t 26286 7797 333272 868000)) nil (26286 7810 727907 308000) 0 nil])
([nil nil ((4202 . 4203) (4201 . 4202)) nil (26286 7810 727906 548000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4206 . 4207) (nil fontified nil 4203 . 4207) (4203 . 4207) 4202) nil (26286 7810 727906 139000) 0 nil])
([nil nil ((#("," 0 1 (face tree-sitter-hl-face:punctuation.delimiter fontified t)) . 4205) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1)) nil (26286 7810 727905 694000) 0 nil])
([nil nil ((#(" " 0 1 (rear-nonsticky t fontified t)) . 4205) (undo-tree-id178 . -1) (undo-tree-id179 . -1)) nil (26286 7810 727904 316000) 0 nil])
([nil nil ((4244 . 4245) (#("1" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 4244) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1)) nil (26286 7810 727903 656000) 0 nil])
([nil nil ((4248 . 4249) (#("2" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 4248) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1)) nil (26286 7810 727902 465000) 0 nil])
([nil nil ((4252 . 4253) (#("3" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 4252) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1)) nil (26286 7810 727899 583000) 0 nil])
([nil nil ((4044 . 4046) (#(" " 0 1 (face tree-sitter-hl-face:variable.parameter fontified t)) . -4044) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) 4045 (4044 . 4045) (t 26286 7810 728475 387000)) nil (26286 7816 929816 196000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t)) . -4291) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (#("n" 0 1 (face (tree-sitter-hl-face:function.call tree-sitter-hl-face:variable) fontified t)) . -4292) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (#("1" 0 1 (face (tree-sitter-hl-face:function.call tree-sitter-hl-face:variable) fontified t)) . -4293) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (#("," 0 1 (face tree-sitter-hl-face:punctuation.delimiter fontified t)) . -4294) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) 4295 (4294 . 4295) (4290 . 4294) (t 26286 7816 931569 171000)) nil (26286 7840 29653 343000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4294 . 4295) (nil fontified nil 4291 . 4295) (4291 . 4295) 4290) nil (26286 7840 29644 368000) 0 nil])
([nil nil ((4327 . 4333) (4312 . 4327) (4307 . 4312) (4305 . 4307) (4294 . 4305) (#(" " 0 1 (rear-nonsticky t fontified t)) . 4294)) nil (26286 7840 29643 899000) 0 nil])
([nil nil ((#("n1," 0 2 (face tree-sitter-hl-face:variable fontified t) 2 3 (fontified t)) . 4291) (undo-tree-id193 . -2) (undo-tree-id194 . -3) (undo-tree-id195 . -3) (undo-tree-id196 . -2) (undo-tree-id197 . -2) (undo-tree-id198 . -3) (undo-tree-id199 . -3)) nil (26286 7840 29643 317000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4305 . 4306) (nil fontified nil 4291 . 4306) (4291 . 4306) 4290) nil (26286 7840 29634 255000) 0 nil])
([nil nil ((4369 . 4375) (4354 . 4369) (4345 . 4354) (t 26286 7840 31918 435000)) nil (26286 7892 468465 621000) 0 nil])
([nil nil ((4395 . 4396) (4387 . 4395) (4386 . 4387) (4380 . 4386) (#("}" 0 1 (face (rainbow-delimiters-mismatched-face tree-sitter-hl-face:punctuation.bracket) fontified t)) . -4380) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) 4381 (4380 . 4381) (#("1" 0 1 (face tree-sitter-hl-face:number syntax-table (2) fontified t)) . -4380) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) 4381 (4375 . 4381) (t 26286 7892 470711 326000)) nil (26286 7919 866448 710000) 0 nil])
([nil nil ((4398 . 4403) (#("4" 0 1 (face (tree-sitter-hl-face:function.call tree-sitter-hl-face:variable) fontified t)) . -4398) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (#("8" 0 1 (face (tree-sitter-hl-face:function.call tree-sitter-hl-face:variable) fontified t)) . -4399) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) 4400 (4387 . 4400) (4372 . 4387) (#(" = " 0 1 (fontified t) 1 2 (face tree-sitter-hl-face:operator syntax-table (1) fontified t) 2 3 (fontified t)) . 4372) (undo-tree-id257 . -2) (undo-tree-id258 . -2) (undo-tree-id259 . -2) (undo-tree-id260 . -1) (undo-tree-id261 . -3) (undo-tree-id262 . -1) (undo-tree-id263 . -2) (undo-tree-id264 . -3) (undo-tree-id265 . -1) (undo-tree-id266 . -2) (undo-tree-id267 . -1) (undo-tree-id268 . -3) (undo-tree-id269 . -3) (t 26286 7919 868125 612000)) nil (26286 7934 721082 586000) 0 nil])
([nil nil ((4373 . 4425) 4402) nil (26286 7934 721076 137000) 0 nil])
([nil nil ((4412 . 4416) (4391 . 4412) (#("otherwise = max (n1 + 1) (n3 + 1)" 0 9 (face tree-sitter-hl-face:variable fontified t) 9 10 (fontified t) 10 11 (face tree-sitter-hl-face:operator syntax-table (1) fontified t) 11 12 (fontified t) 12 15 (face (tree-sitter-hl-face:function.call tree-sitter-hl-face:variable) fontified t) 15 16 (fontified t) 16 17 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t) 17 19 (face (tree-sitter-hl-face:property tree-sitter-hl-face:variable) fontified t) 19 20 (fontified t) 20 21 (face tree-sitter-hl-face:operator syntax-table (1) fontified t) 21 22 (fontified t) 22 23 (face tree-sitter-hl-face:number syntax-table (2) fontified t) 23 24 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t) 24 25 (fontified t) 25 26 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t) 26 28 (face (tree-sitter-hl-face:property tree-sitter-hl-face:variable) fontified t) 28 29 (fontified t) 29 30 (face tree-sitter-hl-face:operator syntax-table (1) fontified t) 30 31 (fontified t) 31 32 (face tree-sitter-hl-face:number syntax-table (2) fontified t) 32 33 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t)) . 4391) (undo-tree-id242 . -32) (undo-tree-id243 . -33) (undo-tree-id244 . -33) (undo-tree-id245 . -33) (undo-tree-id246 . -33)) nil (26286 7934 721073 610000) 0 nil])
([nil nil ((4483 . 4489) (#(" " 0 1 (indent-bars-display #("â”‚" 0 1 (face indent-bars-7)) fontified t)) . -4483) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (#(" " 0 1 (fontified t)) . -4484) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) 4485 (4468 . 4485) 4459 (t 26286 7934 722350 236000)) nil (26286 7941 403170 139000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4505 . 4506) (#("
" 0 1 (fontified nil)) . -4585) (4489 . 4586) 4488) nil (26286 7941 403165 486000) 0 nil])
([nil nil ((4521 . 4522) (#("3" 0 1 (face (tree-sitter-hl-face:property tree-sitter-hl-face:variable) fontified t)) . 4521) (undo-tree-id270 . -1)) nil (26286 7941 403163 713000) 0 nil])
([nil nil ((#("max (n1 + 1) (n3 + 1)" 0 3 (face (tree-sitter-hl-face:function.call tree-sitter-hl-face:variable) fontified t) 3 4 (fontified t) 4 5 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t) 5 7 (face (tree-sitter-hl-face:property tree-sitter-hl-face:variable) fontified t) 7 8 (fontified t) 8 9 (face tree-sitter-hl-face:operator syntax-table (1) fontified t) 9 10 (fontified t) 10 11 (face tree-sitter-hl-face:number syntax-table (2) fontified t) 11 12 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t) 12 13 (fontified t) 13 14 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t) 14 16 (face (tree-sitter-hl-face:property tree-sitter-hl-face:variable) fontified t) 16 17 (fontified t) 17 18 (face tree-sitter-hl-face:operator syntax-table (1) fontified t) 18 19 (fontified t) 19 20 (face tree-sitter-hl-face:number syntax-table (2) fontified t) 20 21 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t)) . 4564) (undo-tree-id287 . -20) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -21) (undo-tree-id291 . -21) (t 26286 7941 404451 283000)) nil (26286 7942 426547 993000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4488) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (t 26286 7942 427466 753000)) nil (26286 7943 961979 31000) 0 nil])
([nil nil ((#("=" 0 1 (syntax-table (1) face tree-sitter-hl-face:operator fontified t)) . 4487) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1)) nil (26286 7943 961978 214000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4486) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1)) nil (26286 7943 961975 398000) 0 nil])
([nil nil ((#("                | n1 == -1 && n2 == -1 = -1
                | otherwise = 
" 0 2 (fontified t) 2 3 (indent-bars-display #("â”‚" 0 1 (face indent-bars-1)) fontified t) 3 4 (fontified t) 4 5 (indent-bars-display #("â”‚" 0 1 (face indent-bars-2)) fontified t) 5 6 (fontified t) 6 7 (indent-bars-display #("â”‚" 0 1 (face indent-bars-3)) fontified t) 7 8 (fontified t) 8 9 (indent-bars-display #("â”‚" 0 1 (face indent-bars-4)) fontified t) 9 10 (fontified t) 10 11 (indent-bars-display #("â”‚" 0 1 (face indent-bars-5)) fontified t) 11 12 (fontified t) 12 13 (indent-bars-display #("â”‚" 0 1 (face indent-bars-6)) fontified t) 13 14 (fontified t) 14 15 (indent-bars-display #("â”‚" 0 1 (face indent-bars-7)) fontified t) 15 16 (rear-nonsticky t fontified t) 16 17 (syntax-table (1) face tree-sitter-hl-face:operator fontified t) 17 18 (fontified t) 18 20 (face (tree-sitter-hl-face:property tree-sitter-hl-face:variable) fontified t) 20 21 (fontified t) 21 22 (syntax-table (1) face tree-sitter-hl-face:operator fontified t) 22 23 (syntax-table (1) face tree-sitter-hl-face:operator fontified t) 23 24 (fontified t) 24 25 (syntax-table (1) face tree-sitter-hl-face:number fontified t) 25 26 (syntax-table (2) face tree-sitter-hl-face:number fontified t) 26 27 (fontified t) 27 28 (syntax-table (1) face tree-sitter-hl-face:operator fontified t) 28 29 (syntax-table (1) face tree-sitter-hl-face:operator fontified t) 29 30 (fontified t) 30 31 (face (tree-sitter-hl-face:property tree-sitter-hl-face:variable) fontified t) 31 32 (face (tree-sitter-hl-face:property tree-sitter-hl-face:variable) fontified t) 32 33 (fontified t) 33 34 (syntax-table (1) face tree-sitter-hl-face:operator fontified t) 34 35 (syntax-table (1) face tree-sitter-hl-face:operator fontified t) 35 36 (fontified t) 36 37 (syntax-table (1) face tree-sitter-hl-face:number fontified t) 37 38 (syntax-table (2) face tree-sitter-hl-face:number fontified t) 38 39 (fontified t) 39 40 (syntax-table (1) face tree-sitter-hl-face:operator fontified t) 40 41 (fontified t) 41 42 (syntax-table (1) face tree-sitter-hl-face:number fontified t) 42 43 (syntax-table (2) face tree-sitter-hl-face:number fontified t) 43 44 (fontified t) 44 46 (fontified t) 46 47 (indent-bars-display #("â”‚" 0 1 (face indent-bars-1)) fontified t) 47 48 (fontified t) 48 49 (indent-bars-display #("â”‚" 0 1 (face indent-bars-2)) fontified t) 49 50 (fontified t) 50 51 (indent-bars-display #("â”‚" 0 1 (face indent-bars-3)) fontified t) 51 52 (fontified t) 52 53 (indent-bars-display #("â”‚" 0 1 (face indent-bars-4)) fontified t) 53 54 (fontified t) 54 55 (indent-bars-display #("â”‚" 0 1 (face indent-bars-5)) fontified t) 55 56 (fontified t) 56 57 (indent-bars-display #("â”‚" 0 1 (face indent-bars-6)) fontified t) 57 58 (fontified t) 58 59 (indent-bars-display #("â”‚" 0 1 (face indent-bars-7)) fontified t) 59 60 (fontified t) 60 61 (syntax-table (1) face tree-sitter-hl-face:operator fontified t) 61 62 (fontified t) 62 71 (face tree-sitter-hl-face:variable fontified t) 71 72 (fontified t) 72 73 (syntax-table (1) face tree-sitter-hl-face:operator fontified t) 73 74 (fontified t) 74 75 (fontified t)) . 4487) (undo-tree-id311 . -72) (undo-tree-id312 . -74) (undo-tree-id313 . 1) (undo-tree-id314 . -72) (undo-tree-id315 . -28) (undo-tree-id316 . -72) (undo-tree-id317 . -28) (undo-tree-id318 . -73) (undo-tree-id319 . -73) (undo-tree-id320 . -75) (undo-tree-id321 . -72) (undo-tree-id322 . -75) (undo-tree-id323 . -72) (undo-tree-id324 . -72) (undo-tree-id325 . -72) (undo-tree-id326 . -72) (undo-tree-id327 . -72) (undo-tree-id328 . -28) (undo-tree-id329 . -72) (undo-tree-id330 . -28) (undo-tree-id331 . -75) (undo-tree-id332 . -75) 4515 (t 26286 7943 962489 966000)) nil (26286 7956 20904 543000) 0 nil])
([nil nil ((4486 . 4491)) nil (26286 7956 20891 100000) 0 nil])
([nil nil ((4047 . 4052) (#("g" 0 1 (face (tree-sitter-hl-face:function.call tree-sitter-hl-face:variable) fontified t)) . -4047) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) 4048 (4046 . 4048) (t 26286 7956 21672 326000)) nil (26286 8022 996888 213000) 0 nil])
([nil nil ((4183 . 4185) (t 26286 8022 998685 218000)) nil (26286 8045 615845 122000) 0 nil])
([nil nil ((#("g" 0 1 (fontified nil)) . -4184) (undo-tree-id336 . -1) (undo-tree-id337 . -1) 4185) nil (26286 8051 220878 475000) 0 nil])
([nil nil ((#("d" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 4183) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (t 26286 8051 741119 918000)) nil (26286 8053 83833 166000) 0 nil] [nil nil ((4184 . 4189)) ((#("bgId " 0 4 (face tree-sitter-hl-face:variable fontified t) 4 5 (fontified t)) . 4184) (undo-tree-id338 . -4) (undo-tree-id339 . -4) (undo-tree-id340 . -5) (undo-tree-id341 . -4) (undo-tree-id342 . -4) (undo-tree-id343 . -4) (undo-tree-id344 . -4) (undo-tree-id345 . -4) (undo-tree-id346 . -4) (undo-tree-id347 . -4) (t 26286 8045 617027 296000)) (26286 8045 615836 841000) 0 nil])
([nil nil ((4288 . 4289) (4285 . 4288) (4284 . 4285) (4282 . 4284) (4281 . 4282) (4280 . 4281) (4272 . 4280) (#(" " 0 1 (fontified t)) . -4272) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) 4273 (4254 . 4273) (4233 . 4236) (4232 . 4233) (4228 . 4232) (4227 . 4228) (4226 . 4227) (#("
" 0 1 (fontified t)) . -4226) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) 4227 (#("                        v, !" 0 2 (fontified t) 2 3 (indent-bars-display #("â”‚" 0 1 (face indent-bars-1)) fontified t) 3 4 (fontified t) 4 5 (indent-bars-display #("â”‚" 0 1 (face indent-bars-2)) fontified t) 5 6 (fontified t) 6 7 (indent-bars-display #("â”‚" 0 1 (face indent-bars-3)) fontified t) 7 8 (fontified t) 8 9 (indent-bars-display #("â”‚" 0 1 (face indent-bars-4)) fontified t) 9 10 (fontified t) 10 11 (indent-bars-display #("â”‚" 0 1 (face indent-bars-5)) fontified t) 11 12 (fontified t) 12 13 (indent-bars-display #("â”‚" 0 1 (face indent-bars-6)) fontified t) 13 14 (fontified t) 14 15 (indent-bars-display #("â”‚" 0 1 (face indent-bars-7)) fontified t) 15 16 (fontified t) 16 17 (indent-bars-display #("â”‚" 0 1 (face indent-bars-8)) fontified t) 17 18 (fontified t) 18 19 (indent-bars-display #("â”‚" 0 1 (face indent-bars-9)) fontified t) 19 24 (fontified t) 24 25 (face tree-sitter-hl-face:variable fontified t) 25 26 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 26 27 (fontified t) 27 28 (face haskell-operator-face syntax-table (1) fontified t)) . -4227) (undo-tree-id401 . -28) (undo-tree-id402 . -24) (undo-tree-id403 . -25) (undo-tree-id404 . -24) (undo-tree-id405 . -26) (undo-tree-id406 . -25) (undo-tree-id407 . -27) (undo-tree-id408 . -26) (undo-tree-id409 . -28) (undo-tree-id410 . -27) (undo-tree-id411 . -28) 4255 (4253 . 4255) (4252 . 4253) (4251 . 4252) (4226 . 4251) (4223 . 4226) (4222 . 4223) (4214 . 4222) (4195 . 4214) (#(" " 0 1 (fontified t)) . 4195) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (t 26286 8053 85140 245000)) nil (26286 8088 763269 615000) 0 nil])
nil
([nil current ((4411 . 4412) (4408 . 4411) (4407 . 4408) (4404 . 4407) (4403 . 4404) (4395 . 4403) (#(" " 0 1 (fontified t)) . -4395) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) 4396 (4377 . 4396) (4356 . 4359) (4355 . 4356) (4351 . 4355) (4350 . 4351) (4346 . 4350) (4345 . 4346) (4337 . 4345) (4318 . 4337) (#(" " 0 1 (fontified t)) . 4318) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1)) nil (26286 8088 761561 36000) 0 nil])
nil
